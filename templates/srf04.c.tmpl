void *send_srf04(void *arg)
{
    (void) arg;

    /* Name of the topic */
    char topic[32];
    sprintf(topic, "{{topic[loop.index0]}}");

    /* Allocate memory for the message to be published */
    char *msg = malloc(128);

    /* Fix port parameter for digital sensor */
    srf04_params_t my_params;

    /* PINS */
    my_params.trigger = GPIO_PIN( 0, {{args[loop.index0]["trigger"]}} );
    my_params.echo = GPIO_PIN( 0, {{args[loop.index0]["echo"]}} );

    /* Initialize gpio and interrupt */
    srf04_t dev;
    if (srf04_init(&dev, &my_params) == SRF04_OK)
        printf("SRF04 sensor connected\n");
    else
        printf("Failed to connect to SRF04 sensor\n");

    /* Print sensor output with frequency {{ frequency[loop.index0] }} Hz */
    while (true)
    {
        /* Get a sensor measurement */
        int dist = srf04_get_distance(&dev);
        
        if (dist == SRF04_ERR_INVALID) 
        {
            printf("Error: No valid measurement is available\n");
        }
        else if (dist == SRF04_ERR_MEASURING) 
        {
            printf("Error: measurement is in progress\n");
        }
        else
        {
            /* Create a message to be published */
            sprintf(msg, "{id: {{ id[loop.index0] }}, SRF04 "
                         "Output: [Distance]: %.2f cm}\n", 
                    (float)dist / 10);

            printf("%s", msg);

            /* Publish to the topic */
            pub(topic, msg, 0);
        }

        /* Sleep for {{ 1/frequency[loop.index0] }} seconds */
        xtimer_msleep( 1000 / {{ frequency[loop.index0] }} );
    }

    return NULL;
}