#ifndef MQTT_FUNCS_H
#define MQTT_FUNCS_H

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

/* MQTT-S includes */
#include <time.h>
#include "shell.h"
#include "msg.h"
#include "net/emcute.h"
#include "net/ipv6/addr.h"

#ifndef EMCUTE_ID
#define EMCUTE_ID ("gertrud")
#endif
#define EMCUTE_PORT ( {{port}} )
#define EMCUTE_PRIO (THREAD_PRIORITY_MAIN - 1)

#define NUMOFSUBS           (16U)
#define TOPIC_MAXLEN        (64U)

static char stack[THREAD_STACKSIZE_DEFAULT];
static msg_t queue[8];

static emcute_sub_t subscriptions[NUMOFSUBS];
static char topics[NUMOFSUBS][TOPIC_MAXLEN];

static void *emcute_thread(void *arg);

/*
 * Shell Commands from emcute_mqttsn example, in the form os functions
 */
static int con(char* addr, int port);
static int discon(void);
static int pub(char* topic, char* data, int qos);

/*
 * Functions & Shell Commands (from emcute_mqttsn example)
 */

static void on_pub(const emcute_topic_t *topic, void *data, size_t len);
static unsigned get_qos(const char *str);
static int cmd_con(int argc, char **argv);
static int cmd_discon(int argc, char **argv);
static int cmd_pub(int argc, char **argv);
static int cmd_sub(int argc, char **argv);
static int cmd_unsub(int argc, char **argv);
static int cmd_will(int argc, char **argv);


#endif